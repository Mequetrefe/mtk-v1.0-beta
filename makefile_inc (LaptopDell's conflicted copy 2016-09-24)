# Makefile setup file for MTK v-1.0.
# Version 2015-01-19

# Welcome user, please set the following variables up:

# 1. The machine (platform) identifier AND required PRECISION:
# ===================================================================

# Options are:
# - LINUX: A LINUX box installation.
# - MACOS: Overrides ATLAS and uses MACOS optimized solvers. Recommended for
# MACOS users who don't want to deal with an ATLAS install.
PLAT      = LINUX

# Options are:
# - SINGLE: Use 4 B floating point numbers.
# - DOUBLE: Use 8 B floating point numbers.
PRECISION = DOUBLE
# 2. Absolute path to base directory:
# ==================================
BASE      = $(HOME)/Dropbox/eduardo_raul/mtk/mtk-v1.0-beta

# 3. Optimized solvers and operations by means of ATLAS in LINUX?
# ==============================================================

# If you have selected MACOS in step 1, then you don't need to worry about this.
# Options are ON xor OFF:
ATL_OPT   = OFF

# 4. Paths to auxiliary libraries header files:
# ============================================

# If optimization is OFF, then provide the paths for:
CBLAS_INC   = $(HOME)/Libraries/CBLAS/include
LAPACKE_INC = $(HOME)/Libraries/lapack-3.4.1/lapacke/include
GLPK_INC = $(HOME)/Libraries/glpk-4.55/include
# On the other hand, if ATLAS optimization is ON, users should only provide the
# path to ATLAS:
ATLAS_INC = $(HOME)/Libraries/ATLAS_3.8.4-CORE/include

# 5. Paths and flags to auxiliary libraries archive files:
# =======================================================

# If optimization is OFF, then provide the paths for:
BLAS_LIB    = $(HOME)/Libraries/BLAS/libblas.a
LAPACK_LIB  = $(HOME)/Libraries/lapack-3.4.1/liblapack.a
CBLAS_LIB   = $(HOME)/Libraries/CBLAS/lib/libcblas.a
LAPACKE_LIB = $(HOME)/Libraries/lapack-3.4.1/liblapacke.a
GLPK_LIB    = $(HOME)/Libraries/glpk-4.55/lib/libglpk.a
# However, if optimization is ON, please provide the path the ATLAS' archive:
ATLAS_LIB   = $(HOME)/Libraries/ATLAS_3.8.4-CORE/ATLAS_3.8.4-BUILD-Citadel/lib

# 6. Compiler and its flags:
# =========================

CC        = g++
# With respect to Debug Level:
# 0. NO debug at all.
# 1. Verbose (execution messages) and intermediate results.
# 2. Level 1 plus entries and scalar values.
# 3. Level 2 plus arrays!
# Flags recommended for production code:
CCFLAGS    = -std=c++11 -fPIC -Wall -O2 -DMTK_DEBUG_LEVEL=0
# Flags recommended for debugging code:
CCFLAGS    = -std=c++11 -fPIC -Wall -g -DMTK_DEBUG_LEVEL=2

# 7. Archiver, its flags, and ranlib:
# ==================================
ARCH      = ar
ARCHFLAGS = cr
# If your system does not have "ranlib" then set: "RANLIB = echo":
RANLIB    = echo
# But, if possible:
RANLIB    = ranlib

# THANK YOU USER, THE FILE WILL TAKE IT FROM HERE...
# ==================================================

#
##
####
########
################
################################
################################################################
################################
################
########
####
##
#

MATH_LIB  = -lm

ifeq ($(PRECISION),DOUBLE)
  CCFLAGS += -DMTK_PRECISION_DOUBLE
else
  CCFLAGS += -DMTK_PRECISION_SINGLE
endif

SRC       = $(BASE)/src
INCLUDE   = $(BASE)/include
LIB       = $(BASE)/lib
MTKLIB    = $(LIB)/libmtk.a

INCLUDES  = -I$(INCLUDE) -I$(GLPK_INC)

NOOPT_INC   = -I$(LAPACKE_INC) -I$(CBLAS_INC)

NOOPT_LIB   = $(LAPACKE_LIB) $(LAPACK_LIB) $(CBLAS_LIB) $(BLAS_LIB) \
  $(MATH_LIB)  $(GLPK_LIB) -lstdc++

ATLAS_LIB = -L$(HOME)/Libraries/ATLAS_3.8.4-CORE/ATLAS_3.8.4-BUILD-Citadel/lib \
  -latlas -llapack -lcblas $(MATH_LIB) -latlas -lstdc++

ifeq ($(ATL_OPT),ON)
  LINKER    = g++
  LIBS      = -L$(LIB) -lmtk
else
  LINKER    = gfortran
  LIBS      = $(LAPACKE_LIB) $(LAPACK_LIB) $(GLPK_LIB) $(MTKLIB)
endif

ifeq ($(PLAT),MACOS)
  LINKER  = g++
  LINKER   += -framework Accelerate
  CCFLAGS  += -DMACOS_SOLVERS_ON
else
  ifeq ($(ATL_OPT),ON)
    INCLUDES += $(ATLAS_INC)
    LIBS     += $(ATLAS_LIB)
  else
    INCLUDES += $(NOOPT_INC)
    LIBS     += $(NOOPT_LIB)
  endif
endif

CCFLAGS   += $(INCLUDES) -c

DOCGEN      = doxygen
DOCFILENAME = doc_config.dxcf

VERSION   = v1.0

TESTS     = $(BASE)/tests

EXAMPLES  = $(BASE)/examples

DOC       = $(BASE)/../mtk-v1.0-beta-doc
DOCFILE   = $(BASE)/$(DOCFILENAME)

DATE      = "`date +20%y-%m-%d`"
